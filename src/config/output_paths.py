"""
Output Directory Configuration
Generated by standardize_output_paths.py

This module provides standardized output paths for the project.
"""

import os
from pathlib import Path

# Project root
PROJECT_ROOT = Path(__file__).resolve().parent.parent

# Standardized output directories
OUTPUT_DIRS = {
    "reports": PROJECT_ROOT / "outputs" / "reports",
    "data": PROJECT_ROOT / "outputs" / "data", 
    "temp": PROJECT_ROOT / "outputs" / "temp",
    "exports": PROJECT_ROOT / "outputs" / "exports"
}

def get_output_path(filename: str, output_type: str = None) -> str:
    """
    Get standardized output path for a file.
    
    Args:
        filename: Name of the output file
        output_type: Type of output ('reports', 'data', 'temp', 'exports')
                    If None, will be determined from filename
    
    Returns:
        Full path to the output file
    """
    if output_type is None:
        # Determine type from filename
        if any(ext in filename.lower() for ext in ['.xlsx', '.pdf', '.html', '.md', '.png']):
            output_type = 'reports'
        elif any(ext in filename.lower() for ext in ['.csv', '.json']):
            output_type = 'data'
        elif 'temp' in filename.lower():
            output_type = 'temp'
        elif 'export' in filename.lower():
            output_type = 'exports'
        else:
            output_type = 'data'
    
    # Ensure directory exists
    OUTPUT_DIRS[output_type].mkdir(parents=True, exist_ok=True)
    
    return str(OUTPUT_DIRS[output_type] / filename)

def ensure_output_dirs():
    """Ensure all output directories exist"""
    for dir_path in OUTPUT_DIRS.values():
        dir_path.mkdir(parents=True, exist_ok=True)
